<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.apache.dolphinscheduler.dao.mapper.CommandMapper">
    <select id="countCommandState" resultType="org.apache.dolphinscheduler.dao.entity.CommandCount">
        select cmd.command_type as command_type, count(1) as count
        from t_ds_command cmd, t_ds_process_definition process
        where cmd.process_definition_code = process.code
        <if test="projectCodeArray != null and projectCodeArray.length != 0">
            and process.project_code in
            <foreach collection="projectCodeArray" index="index" item="i" open="(" close=")" separator=",">
                #{i}
            </foreach>
        </if>
        <if test="startTime != null and endTime != null">
            and cmd.start_time <![CDATA[ >= ]]> #{startTime} and cmd.update_time <![CDATA[ <= ]]> #{endTime}
        </if>
        group by cmd.command_type
    </select>

    <insert id="upsertCommand">
        INSERT INTO `t_ds_command` ( `command_type`, `process_instance_id`,`process_definition_code`, `process_definition_version`, `command_param`, `task_depend_type`, `failure_strategy`, `warning_type`, `warning_group_id`, `schedule_time`, `start_time`, `process_instance_priority`, `worker_group`, `environment_code`, `dry_run`, `manual_run`,`schedule_id`,`executor_id`,`cstate`)
            VALUE(#{command.commandType},#{command.processInstanceId},#{command.processDefinitionCode},#{command.processDefinitionVersion},#{command.commandParam},#{command.taskDependType},#{command.failureStrategy},#{command.warningType},#{command.warningGroupId},#{command.scheduleTime},#{command.startTime},#{command.processInstancePriority},#{command.workerGroup},#{command.environmentCode},#{command.dryRun},#{command.manualRun},#{command.scheduleId},#{command.executorId},0)
        on duplicate key update `executor_id` = #{command.executorId},`schedule_id`=#{command.scheduleId},`command_param`=#{command.commandParam}, `task_depend_type`=#{command.taskDependType},`warning_group_id`=#{command.warningGroupId},`process_instance_priority`=#{command.processInstancePriority}, `worker_group`=#{command.workerGroup}, `environment_code`=#{command.environmentCode},`dry_run`=#{command.dryRun},`process_definition_version`=#{command.processDefinitionVersion}, `failure_strategy`=#{command.failureStrategy},`process_instance_id`=#{command.processInstanceId},`manual_run`=#{command.manualRun}, `warning_type`=#{command.warningType}, `start_time`=#{command.startTime}
    </insert>

    <delete id="deleteCommandByScheduleId">
        delete from t_ds_command where schedule_id=#{scheduleId} and cstate=0
    </delete>
    <select id="queryCommandPage" resultType="org.apache.dolphinscheduler.dao.entity.Command">
        select *
        from t_ds_command where  (now() >= schedule_time ) and cstate=0
        order by process_instance_priority, id asc
        limit #{limit} offset #{offset}
    </select>

    <select id="queryCommands" resultType="org.apache.dolphinscheduler.dao.entity.Command">
        select *
        from t_ds_command where schedule_time>#{scheduleTime} and process_definition_code=#{processDefinitionCode}
    </select>

    <select id="queryCommandByCommandType" resultType="org.apache.dolphinscheduler.dao.entity.Command">
        select *
        from t_ds_command where  command_type in (3,4,7)
    </select>

    <select id="queryCommandPageBySlot" resultType="org.apache.dolphinscheduler.dao.entity.Command">
        select *
        from t_ds_command
        where  (now() >= schedule_time) and cstate=0 and process_definition_code=#{processDefinitionCode} and command_type=#{commandType}
        order by schedule_time,process_instance_priority asc
            limit #{limit} offset #{offset}
    </select>

    <select id="queryProcess" resultType="org.apache.dolphinscheduler.dao.entity.Command">
        select distinct process_definition_code,command_type
        from t_ds_command
        where  (now() >= schedule_time) and cstate=0 and process_definition_code % #{masterCount} = #{thisMasterSlot}
    </select>

    <update id="updateCommandState">
        update t_ds_command set cstate=#{cstate} where id = #{commandId}
    </update>

    <update id="updateCommandByType">
        update t_ds_command set cstate=#{cstate},start_time=now() where schedule_time=#{scheduleTime} and process_definition_code=#{processDefinitionCode} and command_type=#{commandType}
    </update>

    <delete id="makeCommandOffline">
        delete from  t_ds_command  where cstate=0 and schedule_id=#{scheduleId}
    </delete>
</mapper>
